from openai import OpenAI
from dotenv import load_dotenv
import os
from nonebot.log import logger
from nonebot.adapters.onebot.v11 import Bot, MessageEvent, Message, MessageSegment
import json
# 导入env配置
import nonebot
from nonebot.adapters.onebot.v11 import MessageSegment

from .getHistory import get_history

config = nonebot.get_driver().config
# 初始化openai
client = OpenAI(api_key=config.ark_api_key, base_url=config.base_url)

faces = {
    "4": "得意",
    "5": "流泪",
    "8": "睡",
    "9": "大哭",
    "10": "尴尬",
    "12": "调皮",
    "14": "微笑",
    "16": "酷",
    "21": "可爱",
    "23": "傲慢",
    "24": "饥饿",
    "25": "困",
    "26": "惊恐",
    "27": "流汗",
    "28": "憨笑",
    "29": "悠闲",
    "30": "奋斗",
    "32": "疑问",
    "33": "嘘",
    "34": "晕",
    "38": "敲打",
    "39": "再见",
    "41": "发抖",
    "42": "爱情",
    "43": "跳跳",
    "49": "拥抱",
    "53": "蛋糕",
    "60": "咖啡",
    "63": "玫瑰",
    "66": "爱心",
    "74": "太阳",
    "75": "月亮",
    "76": "赞",
    "78": "握手",
    "79": "胜利",
    "85": "飞吻",
    "89": "西瓜",
    "96": "冷汗",
    "97": "擦汗",
    "98": "抠鼻",
    "99": "鼓掌",
    "100": "糗大了",
    "101": "坏笑",
    "102": "左哼哼",
    "103": "右哼哼",
    "104": "哈欠",
    "106": "委屈",
    "109": "左亲亲",
    "111": "可怜",
    "116": "示爱",
    "118": "抱拳",
    "120": "拳头",
    "122": "爱你",
    "123": "NO",
    "124": "OK",
    "125": "转圈",
    "129": "挥手",
    "144": "喝彩",
    "147": "棒棒糖",
    "171": "茶",
    "173": "泪奔",
    "174": "无奈",
    "175": "卖萌",
    "176": "小纠结",
    "179": "doge",
    "180": "惊喜",
    "181": "骚扰",
    "182": "笑哭",
    "183": "我最美",
    "201": "点赞",
    "203": "托脸",
    "212": "托腮",
    "214": "啵啵",
    "219": "蹭一蹭",
    "222": "抱抱",
    "227": "拍手",
    "232": "佛系",
    "240": "喷脸",
    "243": "甩头",
    "246": "加油抱抱",
    "262": "脑阔疼",
    "264": "捂脸",
    "265": "辣眼睛",
    "266": "哦哟",
    "267": "头秃",
    "268": "问号脸",
    "269": "暗中观察",
    "270": "emm",
    "271": "吃瓜",
    "272": "呵呵哒",
    "273": "我酸了",
    "277": "汪汪",
    "278": "汗",
    "281": "无眼笑",
    "282": "敬礼",
    "284": "面无表情",
    "285": "摸鱼",
    "287": "哦",
    "289": "睁眼",
    "290": "敲开心",
    "293": "摸锦鲤",
    "294": "期待",
    "297": "拜谢",
    "298": "元宝",
    "299": "牛啊",
    "305": "右亲亲",
    "306": "牛气冲天",
    "307": "喵喵",
    "314": "仔细分析",
    "315": "加油",
    "318": "崇拜",
    "319": "比心",
    "320": "庆祝",
    "322": "拒绝",
    "324": "吃糖",
    "326": "生气",
    "9728": "☀ 晴天",
    "9749": "☕ 咖啡",
    "9786": "☺ 可爱",
    "10024": "✨ 闪光",
    "10060": "❌ 错误",
    "10068": "❔ 问号",
    "127801": "🌹 玫瑰",
    "127817": "🍉 西瓜",
    "127822": "🍎 苹果",
    "127827": "🍓 草莓",
    "127836": "🍜 拉面",
    "127838": "🍞 面包",
    "127847": "🍧 刨冰",
    "127866": "🍺 啤酒",
    "127867": "🍻 干杯",
    "127881": "🎉 庆祝",
    "128027": "🐛 虫",
    "128046": "🐮 牛",
    "128051": "🐳 鲸鱼",
    "128053": "🐵 猴",
    "128074": "👊 拳头",
    "128076": "👌 好的",
    "128077": "👍 厉害",
    "128079": "👏 鼓掌",
    "128089": "👙 内衣",
    "128102": "👦 男孩",
    "128104": "👨 爸爸",
    "128147": "💓 爱心",
    "128157": "💝 礼物",
    "128164": "💤 睡觉",
    "128166": "💦 水",
    "128168": "💨 吹气",
    "128170": "💪 肌肉",
    "128235": "📫 邮箱",
    "128293": "🔥 火",
    "128513": "😁 呲牙",
    "128514": "😂 激动",
    "128516": "😄 高兴",
    "128522": "😊 嘿嘿",
    "128524": "😌 羞涩",
    "128527": "😏 哼哼",
    "128530": "😒 不屑",
    "128531": "😓 汗",
    "128532": "😔 失落",
    "128536": "😘 飞吻",
    "128538": "😚 亲亲",
    "128540": "😜 淘气",
    "128541": "😝 吐舌",
    "128557": "😭 大哭",
    "128560": "😰 紧张",
    "128563": "😳 瞪眼"
}


system_prompt = f'''
人设：
你是一个潜伏在QQ聊天群里的人，年龄在20岁左右，{config.SCHOOL}毕业，性格风趣幽默，擅长神回复，懂得二次元的任何梗，文化水平和专业技能可以参考一个大学本科的计算机专业的学生，你可以对其他人@你的消息进行回复，回复要尽量简短，符合正常人的聊天逻辑，同时不能暴露自己是机器人/AI语言模型，语句不要浮夸，可以适当保持攻击性，要伪装的像一个群友且符合群内聊天气氛。注意，当别人攻击你的时候，语言可以带攻击性。

回复规则：
只需要给出消息回复，有必要时可以联网搜索，无需给出其他内容，同时你可以使用qq的表情进行回复（qq表情代码为id=表情id）,qq表情的使用与否取决于你，表情id为数字。reply_text语句的结尾不要擅自加表情，例如：[狗头]、[doge]。你可以多次回复消息，回复的格式如下：
注意1. 这里返回的是表情id，而不是表情代码，表情代码为[CQ:emoji,id=277]，277只是示例,你可以参考faces中的表情id
注意2. 回复内容不要超过100字，不要超过100字，不要超过100字，重要的事情说三遍！
注意3. 在“历史消息”中，若用户为"ME"，则表示消息是你发送的，否则为其他群友发送的

以下为回复格式：
回复格式为json数组
[
    {{
        "reply_text": "回复内容",
        "reply_face": "表情id"   # 如果回复没有表情，则没有此字段,一般不要发表情，除非必要！
    }},
    {{
        "reply_text": "回复内容",
        "reply_face": "表情id"  # 如果回复没有表情，则没有此字段,一般不要发表情，除非必要！
    }}
]

表情对照表：
{faces}

不要用代码块包裹回复内容
正确的回复格式：
[
    {{
        "reply_text": "老婆可以不止一个。（暴论",
        "reply_face": "任意一个表情id" 
    }}
]

错误的回复格式：
```json
{{
    "reply_text": "来啊，我反手就是一个代码报错护体[doge]",
    "reply_face": "任意一个表情id"
}}
'''


# 定义一个函数，用于处理消息
async def message_response(bot: Bot, event: MessageEvent) -> str:
    logger.info("开始处理消息")
    # 将消息转换为纯文本
    message_text = {
        "用户": event.sender.nickname,
        "用户id": event.user_id,
        "消息": event.get_plaintext()
    }
    history = await get_history(bot, event)
    message_text = f"历史消息：\n{history}\n当前消息：\n{message_text}"
    response = client.chat.completions.create(
        model=config.model,
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": message_text}  # 使用转换后的纯文本
        ],
        response_format={
            'type': 'json_object'
        },
        max_tokens=1024,
        temperature=0.7,
        stream=False
    )
    logger.info(response.choices[0].message.content)
    # 将json转换为字典
    response_content = json.loads(response.choices[0].message.content)
    for reply in response_content:
        # 提取回复内容
        reply_text = reply['reply_text']
        # 提取表情id
        if 'reply_face' in reply:
            reply_face = reply['reply_face']
            await bot.send(event, MessageSegment.text(reply_text) + MessageSegment.face(reply_face))
        else:
            await bot.send(event, MessageSegment.text(reply_text))
